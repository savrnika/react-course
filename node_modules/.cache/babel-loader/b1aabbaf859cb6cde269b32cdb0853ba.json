{"ast":null,"code":"// import React from \"react\";\n// import { useTheme } from \"@emotion/react\";\n// import { LoadingButton } from \"@mui/lab\";\n// import { Checkbox, Grid, TextField } from \"@mui/material\";\n// import { Box, styled } from \"@mui/system\";\n// import { Paragraph } from \"app/components/Typography\";\n// import { FormikProvider, useFormik,Form ,Formik} from \"formik\";\n// import { useState } from \"react\";\n// import { NavLink, useNavigate, useParams,Link } from \"react-router-dom\";\n// import * as Yup from \"yup\";\n// import { useEffect } from \"react\";\n// import { patchUsers,getUsers } from \"app/apis/apiMethods\";\n// const FlexBox = styled(Box)(() => ({ display: \"flex\", alignItems: \"center\" }));\n// const JustifyBox = styled(FlexBox)(() => ({ justifyContent: \"center\" }));\n// const ContentBox = styled(JustifyBox)(() => ({\n//   height: \"100%\",\n//   padding: \"32px\",\n//   background: \"rgba(0, 0, 0, 0.01)\",\n// }));\n// const validationSchema = Yup.object().shape({\n//   full_name: Yup.string()\n//     .required(\"Name is required!\"),\n//   user_name: Yup.string().required(\"Us er Name is required!\"),\n//   contact_number: Yup.string().required(\"contact_number is required\"),\n//   email: Yup.string()\n//     .email(\"Invalid Email address\")\n//     .required(\"Email is required!\"),\n// });\n// // const handleFormSubmit = (values) => {\n// //     setLoading(true);\n// //     const formData = new FormData();\n// //     formData.append(\"full_name\", values.full_name);\n// //     formData.append(\"user_name\", values.user_name);\n// //     formData.append(\"email\", values.email);\n// //     if (values.confirm_password === values.password) {\n// //       formData.append(\"password\", values.password);\n// //     };\n// //     formData.append(\"contact_number\", values.contact_number);\n// //     formData.append(\"profile_image\", image);\n// //     try {\n// //       register(formData);\n// //       navigate(\"/\")\n// //       setLoading(false);\n// //     } catch (e) {\n// //       console.log(e);\n// //       setLoading(false);\n// //     }\n// //   };\n// export default function EditProfile() {\n//   const theme = useTheme();\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [image,setimage]=useState('');\n//   const [update,setUpdate]=useState({full_name: \"\",\n//   user_name: \"\",\n//   contact_number: \"\",\n//   password: \"\",\n//   email: \"\",\n//   profile_image: \"\"\n//   });\n//   const [user, setUser] = useState();\n//   const { id } = useParams();\n//   const initialValues = {\n//     full_name: \"\",\n//     user_name: \"\",\n//     email: \"\",\n//     contact_number: \"\",\n//   };\n//   useEffect(async () => {\n//     const user = await getUsers(id);\n//     setUser(user.data);\n//     setFieldValue(`full_name`, user.data.full_name);\n//     setFieldValue(`user_name`, user.data.user_name);\n//     setFieldValue(`email`, user.data.email);\n//     setFieldValue(`contact_number`, user.data.contact_number);\n//     setFieldValue(`profile`,user.data.profile);\n//   }, []);\n//   const formik = useFormik({\n//     initialValues: initialValues,\n//     validationSchema: validationSchema,\n//     onSubmit: async (values) => {\n//       console.log(\"..................values\",values)\n//        await patchUsers(id,update,values).then((res)=>{\n//          setUpdate(res)\n//        })\n//       setLoading(user.data);\n//       //console.log(edit,\"Editdata.........\")\n//       navigate(\"/profile\");\n//      },\n//   });\n//   const {\n//     values,\n//     errors,\n//     touched,\n//     handleSubmit,\n//     setFieldValue,\n//     getFieldProps,\n//   } = formik;\n//   //console.log('touched',errors)\n//   return (\n//     <div>\n//       <h1>Edit users</h1>\n//       <Box width=\"100%\" overflow=\"auto\">\n//         <Grid item sm={6} xs={12}>\n//           <Box p={4} height=\"100%\">\n//             <FormikProvider value={formik}>\n//             <Form onSubmit={handleSubmit}>\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"full_name\"\n//                 label=\"fullname\"\n//                 variant=\"outlined\"\n//                 value={values.full_name}\n//                 {...getFieldProps(\"full_name\")}\n//                 helperText={touched.full_name && errors.full_name}\n//                 error={Boolean(errors.full_name && touched.full_name)}\n//                 sx={{ mb: 3 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"user_name\"\n//                 label=\"User name\"\n//                 variant=\"outlined\"\n//                 {...getFieldProps(\"user_name\")}\n//                 value={values.user_name}\n//                 helperText={touched.user_name && errors.user_name}\n//                 error={Boolean(errors.user_name && touched.user_name)}\n//                 sx={{ mb: 3 }}\n//               />\n//              <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"email\"\n//                 label=\"email\"\n//                 variant=\"outlined\"\n//                 {...getFieldProps(\"email\")}\n//                 value={values.email}\n//                 helperText={touched.email && errors.email}\n//                 error={Boolean(errors.email && touched.email)}\n//                 sx={{ mb: 3 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 name=\"contact_number\"\n//                 type=\"number\"\n//                 label=\"Contact number\"\n//                 variant=\"outlined\"\n//                 value={values.contact_number}\n//                 {...getFieldProps(\"contact_number\")}\n//                 helperText={touched.contact_number && errors.contact_number}\n//                 error={Boolean(errors.contact_number && touched.contact_number)}\n//                 sx={{ mb: 2 }}\n//               />\n//                <TextField\n//                       fullWidth\n//                       size=\"small\"\n//                       type=\"file\"\n//                       name=\"profile_image\"\n//                       label=\"Profile image\"\n//                       variant=\"outlined\"\n//                       values={values.profile_image}\n//                        sx={{ mb: 3 }}\n//                     />\n//               <LoadingButton\n//                 type=\"submit\"\n//                 color=\"primary\"\n//                 loading={loading}\n//                 variant=\"contained\"\n//                 sx={{ mb: 2, mt: 3 }}\n//                 //onClick={()=>{handleSubmit()}}\n//               >\n//                 update\n//               </LoadingButton>\n//                 <Paragraph>\n//                 Already have an account?\n//                 <NavLink\n//                   to=\"/session/signin\"\n//                   style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n//                 >\n//                   Login\n//                 </NavLink>\n//               </Paragraph>\n//             </Form>\n//             </FormikProvider>\n//           </Box>\n//         </Grid>\n//       </Box>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/srv/swarnika_new/top_q_website/src/app/views/Profile/EditProfile.jsx"],"sourcesContent":["// import React from \"react\";\n// import { useTheme } from \"@emotion/react\";\n// import { LoadingButton } from \"@mui/lab\";\n// import { Checkbox, Grid, TextField } from \"@mui/material\";\n// import { Box, styled } from \"@mui/system\";\n// import { Paragraph } from \"app/components/Typography\";\n// import { FormikProvider, useFormik,Form ,Formik} from \"formik\";\n// import { useState } from \"react\";\n// import { NavLink, useNavigate, useParams,Link } from \"react-router-dom\";\n// import * as Yup from \"yup\";\n// import { useEffect } from \"react\";\n// import { patchUsers,getUsers } from \"app/apis/apiMethods\";\n\n// const FlexBox = styled(Box)(() => ({ display: \"flex\", alignItems: \"center\" }));\n\n// const JustifyBox = styled(FlexBox)(() => ({ justifyContent: \"center\" }));\n\n// const ContentBox = styled(JustifyBox)(() => ({\n//   height: \"100%\",\n//   padding: \"32px\",\n//   background: \"rgba(0, 0, 0, 0.01)\",\n// }));\n\n// const validationSchema = Yup.object().shape({\n//   full_name: Yup.string()\n//     .required(\"Name is required!\"),\n//   user_name: Yup.string().required(\"Us er Name is required!\"),\n//   contact_number: Yup.string().required(\"contact_number is required\"),\n//   email: Yup.string()\n//     .email(\"Invalid Email address\")\n//     .required(\"Email is required!\"),\n// });\n\n// // const handleFormSubmit = (values) => {\n// //     setLoading(true);\n// //     const formData = new FormData();\n// //     formData.append(\"full_name\", values.full_name);\n// //     formData.append(\"user_name\", values.user_name);\n// //     formData.append(\"email\", values.email);\n// //     if (values.confirm_password === values.password) {\n// //       formData.append(\"password\", values.password);\n// //     };\n// //     formData.append(\"contact_number\", values.contact_number);\n// //     formData.append(\"profile_image\", image);\n// //     try {\n// //       register(formData);\n// //       navigate(\"/\")\n// //       setLoading(false);\n      \n// //     } catch (e) {\n// //       console.log(e);\n// //       setLoading(false);\n// //     }\n// //   };\n\n// export default function EditProfile() {\n//   const theme = useTheme();\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [image,setimage]=useState('');\n//   const [update,setUpdate]=useState({full_name: \"\",\n//   user_name: \"\",\n//   contact_number: \"\",\n//   password: \"\",\n//   email: \"\",\n//   profile_image: \"\"\n\n//   });\n//   const [user, setUser] = useState();\n\n//   const { id } = useParams();\n\n\n//   const initialValues = {\n//     full_name: \"\",\n//     user_name: \"\",\n//     email: \"\",\n//     contact_number: \"\",\n    \n//   };\n\n//   useEffect(async () => {\n//     const user = await getUsers(id);\n    \n//     setUser(user.data);\n\n//     setFieldValue(`full_name`, user.data.full_name);\n//     setFieldValue(`user_name`, user.data.user_name);\n//     setFieldValue(`email`, user.data.email);\n//     setFieldValue(`contact_number`, user.data.contact_number);\n//     setFieldValue(`profile`,user.data.profile);\n//   }, []);\n\n//   const formik = useFormik({\n//     initialValues: initialValues,\n//     validationSchema: validationSchema,\n    \n   \n//     onSubmit: async (values) => {\n//       console.log(\"..................values\",values)\n//        await patchUsers(id,update,values).then((res)=>{\n//          setUpdate(res)\n         \n//        })\n      \n//       setLoading(user.data);\n//       //console.log(edit,\"Editdata.........\")\n//       navigate(\"/profile\");\n//      },\n//   });\n\n//   const {\n//     values,\n//     errors,\n//     touched,\n//     handleSubmit,\n//     setFieldValue,\n//     getFieldProps,\n//   } = formik;\n  \n//   //console.log('touched',errors)\n  \n\n//   return (\n//     <div>\n//       <h1>Edit users</h1>\n\n//       <Box width=\"100%\" overflow=\"auto\">\n//         <Grid item sm={6} xs={12}>\n//           <Box p={4} height=\"100%\">\n//             <FormikProvider value={formik}>\n//             <Form onSubmit={handleSubmit}>\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"full_name\"\n//                 label=\"fullname\"\n//                 variant=\"outlined\"\n//                 value={values.full_name}\n//                 {...getFieldProps(\"full_name\")}\n//                 helperText={touched.full_name && errors.full_name}\n//                 error={Boolean(errors.full_name && touched.full_name)}\n//                 sx={{ mb: 3 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"user_name\"\n//                 label=\"User name\"\n//                 variant=\"outlined\"\n//                 {...getFieldProps(\"user_name\")}\n//                 value={values.user_name}\n//                 helperText={touched.user_name && errors.user_name}\n//                 error={Boolean(errors.user_name && touched.user_name)}\n//                 sx={{ mb: 3 }}\n//               />\n//              <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 type=\"text\"\n//                 name=\"email\"\n//                 label=\"email\"\n//                 variant=\"outlined\"\n//                 {...getFieldProps(\"email\")}\n//                 value={values.email}\n//                 helperText={touched.email && errors.email}\n//                 error={Boolean(errors.email && touched.email)}\n//                 sx={{ mb: 3 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 size=\"small\"\n//                 name=\"contact_number\"\n//                 type=\"number\"\n//                 label=\"Contact number\"\n//                 variant=\"outlined\"\n//                 value={values.contact_number}\n//                 {...getFieldProps(\"contact_number\")}\n//                 helperText={touched.contact_number && errors.contact_number}\n//                 error={Boolean(errors.contact_number && touched.contact_number)}\n//                 sx={{ mb: 2 }}\n//               />\n//                <TextField\n//                       fullWidth\n//                       size=\"small\"\n//                       type=\"file\"\n//                       name=\"profile_image\"\n//                       label=\"Profile image\"\n//                       variant=\"outlined\"\n//                       values={values.profile_image}\n//                        sx={{ mb: 3 }}\n//                     />\n             \n//               <LoadingButton\n//                 type=\"submit\"\n//                 color=\"primary\"\n//                 loading={loading}\n//                 variant=\"contained\"\n//                 sx={{ mb: 2, mt: 3 }}\n//                 //onClick={()=>{handleSubmit()}}\n                \n//               >\n//                 update\n//               </LoadingButton>\n//                 <Paragraph>\n//                 Already have an account?\n//                 <NavLink\n//                   to=\"/session/signin\"\n//                   style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n//                 >\n//                   Login\n//                 </NavLink>\n//               </Paragraph>\n//             </Form>\n//             </FormikProvider>\n//           </Box>\n//         </Grid>\n//       </Box>\n//     </div>\n//   );\n// }\n"],"mappings},"metadata":{},"sourceType":"module"}